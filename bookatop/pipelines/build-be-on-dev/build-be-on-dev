/* Pipeline introduces steps to build on dev */

import com.bookatop.utils.FileUtils

pipeline {
    agent any

    options {
        buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '10', daysToKeepStr: '', numToKeepStr: '10')
    }

    stages {
        stage('Build on DEV') {
            steps {
                sh 'gradle clean build test'
            }
        }
        stage('Copy on DEV') {
            steps {
                script {
                    /* List of services */
                    services = [
                        'auth'
                    ]
                    logger = { echo it }
                    errorLog = { error it }

                    FileUtils utils = new FileUtils(logger, errorLog)

                    services.each { item ->
                        echo "build:${BRANCH_NAME}:$item:${BUILD_NUMBER}:$ENVIRONMENT"

                        source = "${WORKSPACE}/services/${item}/build/libs/${item}-service.jar"
                        destDir = "${JENKINS_HOME}/jobs/${JOB_NAME}/branches/${BRANCH_NAME}/builds/${BUILD_NUMBER}/release"
                        destFile = "${destDir}/${item}-service.jar"

                        echo "JOB_NAME=${JOB_NAME}"
                        echo "BRANCH_NAME=${BRANCH_NAME}"
                        echo "source=${source}"
                        echo "destDir=${destDir}"
                        echo "destFile=${destFile}"

//                        utils.makeDir(destDir)
//                        utils.copyFile(source, destFile)
//                        utils.fileExists(destFile)
                    }
                }
            }
        }
    }
}
def static branches() {
    /*
    def getTags = ("git ls-remote -t -h git@github.com:bookatop/be-bookatop.git").execute()
    return getTags.text.readLines().collect {
        it.split()[1].replaceAll('refs/heads/', '').replaceAll('refs/tags/', '').replaceAll("\\^\\{\\}", '')
    }
    */
    return ['main']
}

pipeline {

    agent any

    options {
        buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
    }

    parameters {
        choice(
                name: 'releaseBranch',
                choices: branches(),
                description: 'Choose branch name*'
        )
        validatingString(
                name: 'releaseNumber',
                defaultValue: '1',
                description: 'Put the build number*',
                failedValidationMessage: 'Build number is invalid',
                regex: /^[0-9]+$/
        )
    }

    stages {
        stage('Build on DEV') {
            steps {
                script {
                    String jenkinsHome = '/var/lib/jenkins'

                    GString sourceRelease = "${jenkinsHome}/jobs/build-frontend-on-dev/branches/${releaseBranch}/builds/${releaseNumber}/releases/com.bookatop.frontend.tar"
                    String destRelease = '/path/dev-env/fe-bookatop/deploy'

                    String file = 'deploy-frontend-on-dev.sh'
                    String script = libraryResource "com/bookatop/scripts/${file}"

                    writeFile(file: file, text: script)
                    sh "chmod +x ./${file} ${sourceRelease} ${destRelease}"
                    sh "./${file}"
                }
            }
        }
    }

}
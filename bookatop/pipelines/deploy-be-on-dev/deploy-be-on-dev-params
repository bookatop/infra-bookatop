/* Introduces steps to build and test the be-bookatop on dev environment */

//@Library('bookatop-shared-libs')
import com.bookatop.deployment.DeployBuilder

def static branches() {
    /*
    def getTags = ("git ls-remote -t -h git@github.com:bookatop/be-bookatop.git").execute()
    return getTags.text.readLines().collect {
        it.split()[1].replaceAll('refs/heads/', '').replaceAll('refs/tags/', '').replaceAll("\\^\\{\\}", '')
    }
    */
    return ['main']
}

pipeline {
    agent any

    parameters {
        choice(
                name: 'branchName',
                choices: branches(),
                description: 'Choose branch name*'
        )
        validatingString(
                name: 'serviceName',
                defaultValue: 'auth',
                description: 'Put the service name*',
                failedValidationMessage: 'Service name is empty',
                regex: /^.+$/
        )
        validatingString(
                name: 'buildNumber',
                defaultValue: '1',
                description: 'Put the build number*',
                failedValidationMessage: 'Build number is invalid',
                regex: /^[0-9]+$/
        )
    }

    stages {

//        stage('Init') {
//            steps {
//                script {
//                    library "bookatop-shared-libs@main"
//                }
//            }
//        }

        stage('Deploy') {

            steps {

                script {

                    servicePlace = "${branchName}:${serviceName}-service:${buildNumber} on $ENVIRONMENT"

                    echo "Deploy $servicePlace"

                    daemonName = "${serviceName}.service"

                    if (this instanceof Script){
                        echo "Executed under Script"
                    } else {
                        echo "Exucuted NOT under Script" + this.className()
                    }

                    // def out = getBinding().out

//                    library('bookatop-shared-libs').com.bookatop.deployment.DeployBuilder
//                            .deployBackEndOnDev(
//                                    "${branchName}",
//                                    "${serviceName}",
//                                    "${daemonName}",
//                                    "${buildNumber}".toInteger(),
//                                    "${SOUR_PATH}",
//                                    "${DEST_PATH}")

//                    library('bookatop-shared-libs@main').com.bookatop.deployment.DeployBuilder

                    println("Print line")

                    ByteArrayOutputStream buf = new ByteArrayOutputStream()
                    PrintStream printStream = new PrintStream(buf)

                    DeployBuilder.deployBackEndOnDev(
                                    printStream,
                                    "${branchName}",
                                    "${serviceName}",
                                    "${daemonName}",
                                    "${buildNumber}".toInteger(),
                                    "${SOUR_PATH}",
                                    "${DEST_PATH}")

                    echo buf.toString()

                    echo "The $servicePlace is success deployed"
                }
            }
        }
    }
}
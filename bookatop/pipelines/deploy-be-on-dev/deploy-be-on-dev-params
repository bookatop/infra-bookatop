/* Introduces steps to build and test the be-bookatop on dev environment */

def static branches() {
    /*
    def getTags = ("git ls-remote -t -h git@github.com:bookatop/be-bookatop.git").execute()
    return getTags.text.readLines().collect {
        it.split()[1].replaceAll('refs/heads/', '').replaceAll('refs/tags/', '').replaceAll("\\^\\{\\}", '')
    }
    */
    return ['main']
}

pipeline {
    agent any

    parameters  {
        choice(
                name: 'branchName',
                choices: branches(),
                description: 'Choose branch name*'
        )
        validatingString(
                name: 'serviceName',
                defaultValue: 'auth',
                description: 'Put the service name*',
                failedValidationMessage: 'Service name is empty',
                regex: /^.+$/
        )
        validatingString(
                name: 'buildNumber',
                defaultValue: '1',
                description: 'Put the build number*',
                failedValidationMessage: 'Build number is invalid',
                regex: /^[0-9]+$/
        )
    }

    stages {
        stage('Deploy') {

            steps {

                script {
                    echo "Deploy ${branchName}:${serviceName}-service:${buildNumber} on $ENVIRONMENT"

                    def deployModule = load 'bookatop/pipelines/deploy-be-on-dev/deploy-be-on-dev.groovy'

//                    varSourceJarName = "${SERVICE_NAME}-service.jar"
//
//                    varSourceJarFile = "${SOUR_PATH}/${SERVICE_NAME}-service-${buildNumber}.jar"
//                    varDestJarFile = "${DEST_PATH}/${varSourceJarName}"
//
//                    varServiceName = "${SERVICE_NAME}.service"
//                    varDaemonName = "${SERVICE_NAME}.service"

                    deployModule.deploy()

                    echo "Deploy ${branchName}:${serviceName}-service:${buildNumber} is success installed and launched on $ENVIRONMENT"
                }
            }
        }
    }
}
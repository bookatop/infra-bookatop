/* Introduces steps to build and test the be-bookatop on dev environment */

//@Library('bookatop-shared-libs')
import com.bookatop.deployment.DeployUtils
import com.bookatop.deployment.Logger

def static branches() {
    /*
    def getTags = ("git ls-remote -t -h git@github.com:bookatop/be-bookatop.git").execute()
    return getTags.text.readLines().collect {
        it.split()[1].replaceAll('refs/heads/', '').replaceAll('refs/tags/', '').replaceAll("\\^\\{\\}", '')
    }
    */
    return ['main']
}

pipeline {
    agent any

    parameters {
        choice(
                name: 'branchName',
                choices: branches(),
                description: 'Choose branch name*'
        )
        validatingString(
                name: 'serviceName',
                defaultValue: 'auth',
                description: 'Put the service name*',
                failedValidationMessage: 'Service name is empty',
                regex: /^.+$/
        )
        validatingString(
                name: 'buildNumber',
                defaultValue: '1',
                description: 'Put the build number*',
                failedValidationMessage: 'Build number is invalid',
                regex: /^[0-9]+$/
        )
    }

    stages {

        stage('Deploy') {

            steps {
                script {

                    GString servicePlace = "${branchName}:${serviceName}-service:${buildNumber} on $ENVIRONMENT"

                    echo "Deploy $servicePlace"

                    Logger logger = new Logger()
                    try {

                        DeployUtils utils = new DeployUtils(logger)

                        GString sourceFile = "${env.SOUR_PATH}/${branchName}/${serviceName}-service-${buildNumber}.jar"
                        Closure exitClosure = { exit it }

                        utils.checkFileExists sourceFile, exitClosure
                        utils.checkServiceStatus "${serviceName}", "${env.BACKEND_URL}", exitClosure

                    } finally {
                        echo logger.toString()
                    }

                    echo "The $servicePlace is success deployed"
                }
            }
        }
    }
}
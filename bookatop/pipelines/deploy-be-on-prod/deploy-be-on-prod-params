/* Introduces steps to build and test the be-bookatop on dev environment */

pipeline {
    agent any

    parameters  {
        validatingString(
                name: 'serviceNameParam',
                defaultValue: 'auth',
                description: 'Put the service name*',
                failedValidationMessage: 'Service name is empty',
                regex: /^.+$/
        )
    }

    stages {
        stage('Deploy on PROD') {
            steps {
                script {

                    GString servicePlace = "main:${serviceNameParam}-service on $ENVIRONMENT"

                    echo "Deploy $servicePlace"

                    Logger logger = new Logger()
                    try {

                        DeployUtils utils = new DeployUtils(logger)

                        GString sourceFile = "${env.SOUR_PATH}/${serviceNameParam}-service.jar"
                        GString destFile = "${env.DEST_PATH}/${serviceNameParam}-service.jar"
                        Closure errorClosure = { error it.toString() }
                        GString serviceName = "${serviceNameParam}.prod.service"
                        GString daemonName = "${serviceNameParam}.prod.service"

                        utils.fileExists sourceFile, errorClosure
                        utils.stopService serviceName, "${env.BACKEND_URL}", errorClosure
                        utils.statusService serviceName, "${env.BACKEND_URL}", 000, errorClosure
                        utils.stopDaemon daemonName, errorClosure
                        utils.statusDaemon daemonName, "failed", {
                            utils.statusDaemon daemonName, "inactive", errorClosure
                        }
                        utils.replaceService sourceFile, destFile, errorClosure
                        utils.fileExists destFile, errorClosure
                        utils.launchDaemon daemonName, errorClosure
                        utils.statusDaemon daemonName, "active", errorClosure
                        utils.statusService serviceName, "${env.BACKEND_URL}", 200, errorClosure

                    } finally {
                        echo logger.toString()
                    }

                    echo "The $servicePlace is success deployed"

                }

            }
        }
    }
}
/* Introduces steps to build and test the be-bookatop on dev environment */

def static branches() {
    def getTags = ("git ls-remote -t -h git@github.com:bookatop/be-bookatop.git").execute()
    return getTags.text.readLines().collect {
        it.split()[1].replaceAll('refs/heads/', '').replaceAll('refs/tags/', '').replaceAll("\\^\\{\\}", '')
    }
}

pipeline {
    agent any

    parameters  {
        choice(
            name: 'branchName',
            choices: branches(),
            description: 'Choose branch name*'
        )
        validatingString(
            name: 'serviceName',
            defaultValue: 'auth',
            description: 'Put the service name*',
            failedValidationMessage: 'Service name is empty',
            regex: /^.+$/
        )
        validatingString(
            name: 'buildName',
            defaultValue: '1',
            description: 'Put the build number*',
            failedValidationMessage: 'Build number is invalid',
            regex: /^[0-9]+$/
        )
    }

    stages {
        stage('Deploy on Dev') {
            environment {
                BACKEND_URL = "http://localhost:8081"
                SOUR_PATH = "/path/dev-env/be-bookatop/releases/${branchName}"
                DEST_PATH = "/path/dev-env/be-bookatop/releases/libs/${serviceName}-service"
                TRY_COUNT = 10
            }
            steps {
                echo "Deploy ${branchName}:${serviceName}:${buildName} on dev environment"

                script {
                    varSourceFile = "${SOUR_PATH}/${serviceName}-service-${buildName}.jar"
                    varDestFile = "${DEST_PATH}/${serviceName}-service-${branchName}-${buildName}.jar"
                    varServiceName = "${serviceName}-service"

                    /*-------------Check if new service is exist to be replaced--------------*/

                    sh '''
                      #!/bin/sh
                      echo Check if new service $varSourceFile is exist to be replaced
                      if ! [ -f $varSourceFile ]; then
                         echo Oops! The service $varSourceFile is not exist!
                         exit 1
                      fi                       
                    '''

                    /*-------------Stop service script-----------------*/

                    sh '''         
                      #!/bin/sh                      
                      echo Stop the service $varServiceName on dev           
                      i=0
                      while [ "$(curl -X GET 'http://bookatop.com:8081/actuator/health' | jq -r '.status')" = "UP" ] 
                      do
                        echo Try $i stop service $varServiceName
                        if [ ${i} -eq ${TRY_COUNT} ]; 
                        then
                          echo Could not stop service $varServiceName or the service is not starter. Try do it later.
                          exit 1
                        fi
                        curl -X POST 'http://bookatop.com:8081/actuator/shutdown'
                        sleep 1  
                        i=$(($i+1))                          
                      done
                    '''

                    /*-------------Replace service----------------------*/

                    sh '''
                      #!/bin/sh
                      echo Replace service $varDestFile on dev
                      
                      #Make the destination directory $DEST_PATH exists
                      if ! [ -d ${DEST_PATH} ]; then
                          mkdir -p ${DEST_PATH}
                      fi
                      
                      echo Remove the following services 
                      ls $DEST_PATH/                      
                      rm -f $DEST_PATH/*
                      
                      #Do not overwrite an existing file                      
                      echo Put service $varDestFile
                      cp -n $varSourceFile $varDestFile

                      echo Launch the service $varDestFile
                    '''

                }
            }
        }
    }
}
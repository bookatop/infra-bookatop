/* Introduces steps to build and test the be-bookatop on dev environment */

def static branches() {
    def getTags = ("git ls-remote -t -h git@github.com:bookatop/be-bookatop.git").execute()
    return getTags.text.readLines().collect {
        it.split()[1].replaceAll('refs/heads/', '').replaceAll('refs/tags/', '').replaceAll("\\^\\{\\}", '')
    }
}

pipeline {
    agent any

    parameters  {
        choice(
            name: 'branchName',
            choices: branches(),
            description: 'Choose branch name*'
        )
        validatingString(
            name: 'serviceName',
            defaultValue: 'auth',
            description: 'Put the service name*',
            failedValidationMessage: 'Service name is empty',
            regex: /^.+$/
        )
        validatingString(
            name: 'buildName',
            defaultValue: '1',
            description: 'Put the build number*',
            failedValidationMessage: 'Build number is invalid',
            regex: /^[0-9]+$/
        )
    }

    stages {
        stage('Deploy on Dev') {
            environment {
                SOUR_PATH = '/path/dev-env/be-bookatop/releases/${branchName}'
                DEST_PATH = '/path/dev-env/be-bookatop/releases/libs'
            }
            steps {
                echo "Deploy ${branchName}:${serviceName}:${buildName} on dev environment"

                script {
                    varSourceFile = "${SOUR_PATH}/${serviceName}-${buildName}.jar"
                    varDestFile = "${DEST_PATH}/${serviceName}-${branchName}-${buildName}.jar"

                    echo varSourceFile
                    echo varDestFile
                }
            }
        }
    }
}